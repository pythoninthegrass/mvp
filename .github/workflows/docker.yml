name: Publish Docker images

on:
  push:
    branches:
      - 'main'
      - 'master'
    tags:
      - '*.*.*'
    paths:
      - 'Dockerfile*'
      - 'pyproject.toml'
      - 'poetry.lock'
      - 'requirements.txt'
      - '**.py'
      - '**.sh'
      - '.dockerignore'
      - '.env.example'
      - '.github/workflows/**'
  workflow_dispatch:
  workflow_run:
    workflows: ["Run pytest"]
    types:
      - completed

env:
  REGISTRY_URL: ${{ vars.REGISTRY_URL }}
  REGISTRY_USER: ${{ vars.REGISTRY_USER }}

jobs:
  push_to_registry:
    name: Push Docker image to container registry
    if: |
      (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/'))) ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerfile: [Dockerfile]
    concurrency:
      group: ${{ github.workflow }}-${{ matrix.dockerfile }}-${{ github.event.workflow_run.head_branch || github.ref }}
      cancel-in-progress: true
    permissions:
      packages: write
      contents: read
      actions: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log into container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract image name from Dockerfile
        id: image_name
        run: |
          IMAGE=$(grep "LABEL org.opencontainers.image.title" ${{ matrix.dockerfile }} | cut -d'"' -f2)
          echo "IMAGE=$IMAGE" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            name=${{ env.REGISTRY_URL }}/${{ env.REGISTRY_USER }}/${{ steps.image_name.outputs.IMAGE }}
          tags: |
            type=raw,value=latest,enable=${{ endsWith(github.ref, 'main') }}
            type=ref,event=branch,enable=${{ !endsWith(github.ref, 'main') }}
            type=semver,pattern={{version}}
          flavor: |
            latest=false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64/v8
          cache-from: |
            type=registry,ref=ghcr.io/${{ github.repository_owner }}/build-cache:${{ steps.image_name.outputs.IMAGE }}-buildcache
          cache-to: |
            type=registry,ref=ghcr.io/${{ github.repository_owner }}/build-cache:${{ steps.image_name.outputs.IMAGE }}-buildcache,mode=max
