name: Publish Docker images

on:
  push:
    branches:
      - 'main'
      - 'master'
    tags:
      - '*.*.*'
    paths:
      - 'Dockerfile*'
      - 'pyproject.toml'
      - '*.lock'
      - 'requirements.txt'
      - '**.py'
      - '**.sh'
      - '.dockerignore'
      - '.env.example'
      - '.github/workflows/**'
  workflow_dispatch:

env:
  REGISTRY_URL: ${{ vars.REGISTRY_URL || 'ghcr.io' }}
  REGISTRY_USER: ${{ vars.REGISTRY_USER || github.repository_owner }}
  REGISTRY_PASS: ${{ (vars.REGISTRY_URL == 'ghcr.io' || !vars.REGISTRY_URL) && secrets.GITHUB_TOKEN || secrets.REGISTRY_PASS }}
  IMAGE_NAME: ${{ vars.IMAGE || github.event.repository.name }}

jobs:
  push_to_registry:
    name: Push Docker image to container registry
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        dockerfile: [Dockerfile]
    concurrency:
      group: ${{ github.workflow }}-${{ matrix.dockerfile }}-${{ github.head_ref || github.ref }}
      cancel-in-progress: true
    permissions:
      packages: write
      contents: read
      actions: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log into container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASS }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_URL }}/${{ env.REGISTRY_USER }}/${{ env.IMAGE_NAME }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch || 'main') }}
          bake-target: docker-metadata-action

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/bake-action@v6
        with:
          source: "{{defaultContext}}"
          files: |
            ./docker-bake.hcl
            cwd://${{ steps.meta.outputs.bake-file }}
          targets: build
          push: ${{ github.event_name != 'pull_request' }}
          set: |
            *.tags=${{ env.REGISTRY_URL }}/${{ env.REGISTRY_USER }}/${{ env.IMAGE_NAME }}:latest
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
